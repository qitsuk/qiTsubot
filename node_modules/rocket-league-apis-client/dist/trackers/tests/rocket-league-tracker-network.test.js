'use strict';

var _rocketLeagueTrackerNetwork = require('../rocket-league-tracker-network');

var _rocketLeagueTrackerNetwork2 = _interopRequireDefault(_rocketLeagueTrackerNetwork);

var _rocketLeagueTrackerNetworkResponseMock = require('./mocks/rocket-league-tracker-network-response.mock.json');

var _rocketLeagueTrackerNetworkResponseMock2 = _interopRequireDefault(_rocketLeagueTrackerNetworkResponseMock);

var _rocketLeagueTrackerNetworkFormattedInformationMock = require('./mocks/rocket-league-tracker-network-formatted-information.mock.json');

var _rocketLeagueTrackerNetworkFormattedInformationMock2 = _interopRequireDefault(_rocketLeagueTrackerNetworkFormattedInformationMock);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Rocket League Tracker Network', function () {
  var apiUrl = 'http://test.com';
  var apiKey = 'API_KEY';

  describe('createRequest', function () {
    var name = 1;
    var platform = 0;
    var expected = {
      url: apiUrl,
      query: {
        name: name,
        platform: 3 - platform
      },
      headers: { 'X-API-KEY': apiKey }
    };
    it('Should create a correct request', function () {
      return expect(_rocketLeagueTrackerNetwork2.default.createRequest(apiUrl, apiKey, 0, 1)).to.deep.equal(expected);
    });
  });

  describe('formatResponse', function () {
    it('Should properly format the response', function () {
      return expect(_rocketLeagueTrackerNetwork2.default.formatPlayerResponse(_rocketLeagueTrackerNetworkResponseMock2.default)).to.deep.equal(_rocketLeagueTrackerNetworkFormattedInformationMock2.default);
    });
  });
});