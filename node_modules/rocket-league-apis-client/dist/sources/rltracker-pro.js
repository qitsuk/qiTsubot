'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatResponse = undefined;

var _toPairs = require('lodash/toPairs');

var _toPairs2 = _interopRequireDefault(_toPairs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var playlistMap = {
  10: '1v1',
  11: '2v2',
  12: '3v3s',
  13: '3v3'
};

/* extract ranks from api stats object */
var formatRanks = function formatRanks(ranks) {
  var formattedRanks = {};
  (0, _toPairs2.default)(ranks).forEach(function (rank) {
    var playlist = playlistMap[rank[0]];
    var values = rank[1];
    formattedRanks[playlist] = parseInt(values.rating, 10);
    formattedRanks[playlist + '_games_played'] = parseInt(values.matches_played, 10);
    formattedRanks[playlist + '_division'] = parseInt(values.division, 10);
    formattedRanks[playlist + '_tier'] = parseInt(values.tier_id, 10);
  });
  return formattedRanks;
};

var createRequest = function createRequest(apiUrl, apiKey, platform, id) {
  var query = {
    api_key: apiKey,
    platform: platform + 1, // rltracker conversion
    id: id
  };
  return { url: apiUrl, query: query };
};

var handleResponse = function handleResponse(res) {
  return res.json().then(function (data) {
    return formatResponse(data);
  }).catch(function (err) {
    return { data: err, message: 'UnknownError' };
  });
};

var formatResponse = exports.formatResponse = function formatResponse(data) {
  var info = formatRanks(data.ranking);
  info.name = data.player.nickname;
  info.id = data.player.player_id;
  return info;
};

exports.default = { createRequest: createRequest, handleResponse: handleResponse };